name: Build sdk-bindings for Darwin
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'commit/tag/branch reference'
        required: true
        type: string
  workflow_call:
    inputs:
      repository:
        description: 'sdk repository, defaults to current repository'
        required: false
        type: string
      ref:
        description: 'commit/tag/branch reference'
        required: true
        type: string
      use-dummy-binaries:
        description: 'If true, creates dummy binaries rather than real binaries'
        required: false
        type: boolean
        default: false
      uniffi-25:
        description: 'If true, builds additional bindings for Uniffi 0.25'
        required: false
        type: boolean
        default: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - id: set-matrix
        run: |
          if [ ${{ inputs.uniffi-25 }} == true ]; then
            echo "::set-output name=matrix::['', '-uniffi-25']"
          else
            echo "::set-output name=matrix::['']"
          fi
    outputs:
      uniffi-matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    if: ${{ !inputs.use-dummy-binaries }}
    runs-on: macOS-latest
    name: build ${{ matrix.target }}${{ matrix.uniffi }}
    needs: setup
    strategy:
      matrix:
        uniffi: ${{ fromJson(needs.setup.outputs.uniffi-matrix) }}
        target: [
          aarch64-apple-darwin,
          x86_64-apple-darwin,
        ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with: 
        ref: ${{ inputs.ref }}
        repository: ${{ inputs.repository || github.repository }}

    - name: Install rust toolchain
      run: |
        rustup set auto-self-update disable
        rustup toolchain install stable --profile minimal
        rustup target add ${{ matrix.target }}
        cargo install cargo-lipo

    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: "27.2"
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.uniffi }}
        workspaces: libs

    - name: Build sdk-bindings
      if: matrix.uniffi != '-uniffi-25'
      working-directory: libs/sdk-bindings
      run: cargo lipo --release --targets ${{ matrix.target }}

    - name: Build sdk-bindings Uniffi 0.25
      if: matrix.uniffi == '-uniffi-25'
      working-directory: libs/sdk-bindings
      run: cargo lipo --no-default-features --features=uniffi-25 --release --targets ${{ matrix.target }}

    - name: Archive release
      uses: actions/upload-artifact@v4
      with:
        name: sdk-bindings-${{ matrix.target }}${{ matrix.uniffi }}
        path: |
          libs/target/${{ matrix.target }}/release/libbreez_sdk_bindings.dylib
          libs/target/${{ matrix.target }}/release/libbreez_sdk_bindings.a
  
  merge:
    runs-on: macOS-latest
    needs:
    - setup
    - build
    name: build darwin-universal${{ matrix.uniffi }}
    strategy:
      matrix:
        uniffi: ${{ fromJson(needs.setup.outputs.uniffi-matrix) }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: sdk-bindings-aarch64-apple-darwin${{ matrix.uniffi }}
        path: aarch64-apple-darwin

    - uses: actions/download-artifact@v4
      with:
        name: sdk-bindings-x86_64-apple-darwin${{ matrix.uniffi }}
        path: x86_64-apple-darwin

    - name: Build Darwin universal
      run: |
        mkdir -p darwin-universal
        lipo -create -output darwin-universal/libbreez_sdk_bindings.dylib aarch64-apple-darwin/libbreez_sdk_bindings.dylib x86_64-apple-darwin/libbreez_sdk_bindings.dylib
        lipo -create -output darwin-universal/libbreez_sdk_bindings.a aarch64-apple-darwin/libbreez_sdk_bindings.a x86_64-apple-darwin/libbreez_sdk_bindings.a

    - name: Archive release
      uses: actions/upload-artifact@v4
      with:
        name: sdk-bindings-darwin-universal${{ matrix.uniffi }}
        path: |
          darwin-universal/libbreez_sdk_bindings.dylib
          darwin-universal/libbreez_sdk_bindings.a

  build-dummies:
    if: ${{ inputs.use-dummy-binaries }}
    runs-on: ubuntu-latest
    name: build dummies ${{ matrix.target }}${{ matrix.uniffi }}
    needs: setup
    strategy:
      matrix:
        uniffi: ${{ fromJson(needs.setup.outputs.uniffi-matrix) }}
        target: [
          aarch64-apple-darwin,
          x86_64-apple-darwin,
          darwin-universal
        ]
    steps:
      - name: Build dummy darwin ${{ matrix.target }}
        run: |
          touch libbreez_sdk_bindings.dylib
          touch libbreez_sdk_bindings.a

      - name: Upload dummy darwin ${{ matrix.target }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdk-bindings-${{ matrix.target }}${{ matrix.uniffi }}
          path: ./*